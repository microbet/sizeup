//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SizeUp.Data", "FK_IndustryKeyword_Industry", "Industry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SizeUp.Data.Industry), "IndustryKeyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SizeUp.Data.IndustryKeyword), true)]
[assembly: EdmRelationshipAttribute("SizeUp.Data", "FK_SicToNAICSMapping_Industry", "Industry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SizeUp.Data.Industry), "SicToNAICSMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SizeUp.Data.SicToNAICSMapping), true)]
[assembly: EdmRelationshipAttribute("SizeUp.Data", "FK_SicToNAICSMapping_NAICS", "NAICS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SizeUp.Data.NAICS), "SicToNAICSMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SizeUp.Data.SicToNAICSMapping), true)]
[assembly: EdmRelationshipAttribute("SizeUp.Data", "FK_City_County", "County", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SizeUp.Data.County), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SizeUp.Data.City), true)]
[assembly: EdmRelationshipAttribute("SizeUp.Data", "FK_City_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SizeUp.Data.State), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SizeUp.Data.City), true)]
[assembly: EdmRelationshipAttribute("SizeUp.Data", "FK_County_Metro", "Metro", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SizeUp.Data.Metro), "County", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SizeUp.Data.County), true)]
[assembly: EdmRelationshipAttribute("SizeUp.Data", "FK_County_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SizeUp.Data.State), "County", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SizeUp.Data.County), true)]

#endregion

namespace SizeUp.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SizeUpContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SizeUpContext object using the connection string found in the 'SizeUpContext' section of the application configuration file.
        /// </summary>
        public SizeUpContext() : base("name=SizeUpContext", "SizeUpContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SizeUpContext object.
        /// </summary>
        public SizeUpContext(string connectionString) : base(connectionString, "SizeUpContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SizeUpContext object.
        /// </summary>
        public SizeUpContext(EntityConnection connection) : base(connection, "SizeUpContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Industry> Industries
        {
            get
            {
                if ((_Industries == null))
                {
                    _Industries = base.CreateObjectSet<Industry>("Industries");
                }
                return _Industries;
            }
        }
        private ObjectSet<Industry> _Industries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IndustryKeyword> IndustryKeywords
        {
            get
            {
                if ((_IndustryKeywords == null))
                {
                    _IndustryKeywords = base.CreateObjectSet<IndustryKeyword>("IndustryKeywords");
                }
                return _IndustryKeywords;
            }
        }
        private ObjectSet<IndustryKeyword> _IndustryKeywords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NAICS> NAICS
        {
            get
            {
                if ((_NAICS == null))
                {
                    _NAICS = base.CreateObjectSet<NAICS>("NAICS");
                }
                return _NAICS;
            }
        }
        private ObjectSet<NAICS> _NAICS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SicToNAICSMapping> SicToNAICSMappings
        {
            get
            {
                if ((_SicToNAICSMappings == null))
                {
                    _SicToNAICSMappings = base.CreateObjectSet<SicToNAICSMapping>("SicToNAICSMappings");
                }
                return _SicToNAICSMappings;
            }
        }
        private ObjectSet<SicToNAICSMapping> _SicToNAICSMappings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Business> Businesses
        {
            get
            {
                if ((_Businesses == null))
                {
                    _Businesses = base.CreateObjectSet<Business>("Businesses");
                }
                return _Businesses;
            }
        }
        private ObjectSet<Business> _Businesses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<County> Counties
        {
            get
            {
                if ((_Counties == null))
                {
                    _Counties = base.CreateObjectSet<County>("Counties");
                }
                return _Counties;
            }
        }
        private ObjectSet<County> _Counties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Metro> Metroes
        {
            get
            {
                if ((_Metroes == null))
                {
                    _Metroes = base.CreateObjectSet<Metro>("Metroes");
                }
                return _Metroes;
            }
        }
        private ObjectSet<Metro> _Metroes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> States
        {
            get
            {
                if ((_States == null))
                {
                    _States = base.CreateObjectSet<State>("States");
                }
                return _States;
            }
        }
        private ObjectSet<State> _States;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ZipCode> ZipCodes
        {
            get
            {
                if ((_ZipCodes == null))
                {
                    _ZipCodes = base.CreateObjectSet<ZipCode>("ZipCodes");
                }
                return _ZipCodes;
            }
        }
        private ObjectSet<ZipCode> _ZipCodes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Industries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIndustries(Industry industry)
        {
            base.AddObject("Industries", industry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IndustryKeywords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIndustryKeywords(IndustryKeyword industryKeyword)
        {
            base.AddObject("IndustryKeywords", industryKeyword);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NAICS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNAICS(NAICS nAICS)
        {
            base.AddObject("NAICS", nAICS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SicToNAICSMappings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSicToNAICSMappings(SicToNAICSMapping sicToNAICSMapping)
        {
            base.AddObject("SicToNAICSMappings", sicToNAICSMapping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Businesses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBusinesses(Business business)
        {
            base.AddObject("Businesses", business);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Counties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCounties(County county)
        {
            base.AddObject("Counties", county);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Metroes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetroes(Metro metro)
        {
            base.AddObject("Metroes", metro);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the States EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStates(State state)
        {
            base.AddObject("States", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ZipCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToZipCodes(ZipCode zipCode)
        {
            base.AddObject("ZipCodes", zipCode);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SizeUp.Data", Name="Business")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Business : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Business object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="vendorId">Initial value of the VendorId property.</param>
        /// <param name="geography">Initial value of the Geography property.</param>
        /// <param name="isHomeBased">Initial value of the IsHomeBased property.</param>
        /// <param name="isFirm">Initial value of the IsFirm property.</param>
        public static Business CreateBusiness(global::System.Int64 id, global::System.String name, global::System.Int64 vendorId, global::System.Data.Spatial.DbGeography geography, global::System.Boolean isHomeBased, global::System.Boolean isFirm)
        {
            Business business = new Business();
            business.Id = id;
            business.Name = name;
            business.VendorId = vendorId;
            business.Geography = geography;
            business.IsHomeBased = isHomeBased;
            business.IsFirm = isFirm;
            return business;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true, "Street");
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true, "State");
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true, "Zip");
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipPlus4
        {
            get
            {
                return _ZipPlus4;
            }
            set
            {
                OnZipPlus4Changing(value);
                ReportPropertyChanging("ZipPlus4");
                _ZipPlus4 = StructuralObject.SetValidValue(value, true, "ZipPlus4");
                ReportPropertyChanged("ZipPlus4");
                OnZipPlus4Changed();
            }
        }
        private global::System.String _ZipPlus4;
        partial void OnZipPlus4Changing(global::System.String value);
        partial void OnZipPlus4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 VendorId
        {
            get
            {
                return _VendorId;
            }
            set
            {
                OnVendorIdChanging(value);
                ReportPropertyChanging("VendorId");
                _VendorId = StructuralObject.SetValidValue(value, "VendorId");
                ReportPropertyChanged("VendorId");
                OnVendorIdChanged();
            }
        }
        private global::System.Int64 _VendorId;
        partial void OnVendorIdChanging(global::System.Int64 value);
        partial void OnVendorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WebsiteURL
        {
            get
            {
                return _WebsiteURL;
            }
            set
            {
                OnWebsiteURLChanging(value);
                ReportPropertyChanging("WebsiteURL");
                _WebsiteURL = StructuralObject.SetValidValue(value, true, "WebsiteURL");
                ReportPropertyChanged("WebsiteURL");
                OnWebsiteURLChanged();
            }
        }
        private global::System.String _WebsiteURL;
        partial void OnWebsiteURLChanging(global::System.String value);
        partial void OnWebsiteURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeography Geography
        {
            get
            {
                return _Geography;
            }
            set
            {
                OnGeographyChanging(value);
                ReportPropertyChanging("Geography");
                _Geography = StructuralObject.SetValidValue(value, false, "Geography");
                ReportPropertyChanged("Geography");
                OnGeographyChanged();
            }
        }
        private global::System.Data.Spatial.DbGeography _Geography;
        partial void OnGeographyChanging(global::System.Data.Spatial.DbGeography value);
        partial void OnGeographyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SEOKey
        {
            get
            {
                return _SEOKey;
            }
            set
            {
                OnSEOKeyChanging(value);
                ReportPropertyChanging("SEOKey");
                _SEOKey = StructuralObject.SetValidValue(value, true, "SEOKey");
                ReportPropertyChanged("SEOKey");
                OnSEOKeyChanged();
            }
        }
        private global::System.String _SEOKey;
        partial void OnSEOKeyChanging(global::System.String value);
        partial void OnSEOKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BusinessStatusCode
        {
            get
            {
                return _BusinessStatusCode;
            }
            set
            {
                OnBusinessStatusCodeChanging(value);
                ReportPropertyChanging("BusinessStatusCode");
                _BusinessStatusCode = StructuralObject.SetValidValue(value, "BusinessStatusCode");
                ReportPropertyChanged("BusinessStatusCode");
                OnBusinessStatusCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _BusinessStatusCode;
        partial void OnBusinessStatusCodeChanging(Nullable<global::System.Int32> value);
        partial void OnBusinessStatusCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearStarted
        {
            get
            {
                return _YearStarted;
            }
            set
            {
                OnYearStartedChanging(value);
                ReportPropertyChanging("YearStarted");
                _YearStarted = StructuralObject.SetValidValue(value, "YearStarted");
                ReportPropertyChanged("YearStarted");
                OnYearStartedChanged();
            }
        }
        private Nullable<global::System.Int32> _YearStarted;
        partial void OnYearStartedChanging(Nullable<global::System.Int32> value);
        partial void OnYearStartedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsHomeBased
        {
            get
            {
                return _IsHomeBased;
            }
            set
            {
                OnIsHomeBasedChanging(value);
                ReportPropertyChanging("IsHomeBased");
                _IsHomeBased = StructuralObject.SetValidValue(value, "IsHomeBased");
                ReportPropertyChanged("IsHomeBased");
                OnIsHomeBasedChanged();
            }
        }
        private global::System.Boolean _IsHomeBased;
        partial void OnIsHomeBasedChanging(global::System.Boolean value);
        partial void OnIsHomeBasedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFirm
        {
            get
            {
                return _IsFirm;
            }
            set
            {
                OnIsFirmChanging(value);
                ReportPropertyChanging("IsFirm");
                _IsFirm = StructuralObject.SetValidValue(value, "IsFirm");
                ReportPropertyChanged("IsFirm");
                OnIsFirmChanged();
            }
        }
        private global::System.Boolean _IsFirm;
        partial void OnIsFirmChanging(global::System.Boolean value);
        partial void OnIsFirmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PublicCompanyIndicator
        {
            get
            {
                return _PublicCompanyIndicator;
            }
            set
            {
                OnPublicCompanyIndicatorChanging(value);
                ReportPropertyChanging("PublicCompanyIndicator");
                _PublicCompanyIndicator = StructuralObject.SetValidValue(value, "PublicCompanyIndicator");
                ReportPropertyChanged("PublicCompanyIndicator");
                OnPublicCompanyIndicatorChanged();
            }
        }
        private Nullable<global::System.Int32> _PublicCompanyIndicator;
        partial void OnPublicCompanyIndicatorChanging(Nullable<global::System.Int32> value);
        partial void OnPublicCompanyIndicatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SizeUp.Data", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="fIPS">Initial value of the FIPS property.</param>
        /// <param name="cityType">Initial value of the CityType property.</param>
        /// <param name="censusClassCode">Initial value of the CensusClassCode property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="countyId">Initial value of the CountyId property.</param>
        public static City CreateCity(global::System.Int64 id, global::System.String name, global::System.String fIPS, global::System.String cityType, global::System.String censusClassCode, global::System.Int64 stateId, global::System.Int64 countyId)
        {
            City city = new City();
            city.Id = id;
            city.Name = name;
            city.FIPS = fIPS;
            city.CityType = cityType;
            city.CensusClassCode = censusClassCode;
            city.StateId = stateId;
            city.CountyId = countyId;
            return city;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FIPS
        {
            get
            {
                return _FIPS;
            }
            set
            {
                OnFIPSChanging(value);
                ReportPropertyChanging("FIPS");
                _FIPS = StructuralObject.SetValidValue(value, false, "FIPS");
                ReportPropertyChanged("FIPS");
                OnFIPSChanged();
            }
        }
        private global::System.String _FIPS;
        partial void OnFIPSChanging(global::System.String value);
        partial void OnFIPSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityType
        {
            get
            {
                return _CityType;
            }
            set
            {
                OnCityTypeChanging(value);
                ReportPropertyChanging("CityType");
                _CityType = StructuralObject.SetValidValue(value, false, "CityType");
                ReportPropertyChanged("CityType");
                OnCityTypeChanged();
            }
        }
        private global::System.String _CityType;
        partial void OnCityTypeChanging(global::System.String value);
        partial void OnCityTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CensusClassCode
        {
            get
            {
                return _CensusClassCode;
            }
            set
            {
                OnCensusClassCodeChanging(value);
                ReportPropertyChanging("CensusClassCode");
                _CensusClassCode = StructuralObject.SetValidValue(value, false, "CensusClassCode");
                ReportPropertyChanged("CensusClassCode");
                OnCensusClassCodeChanged();
            }
        }
        private global::System.String _CensusClassCode;
        partial void OnCensusClassCodeChanging(global::System.String value);
        partial void OnCensusClassCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeography Geography
        {
            get
            {
                return _Geography;
            }
            set
            {
                OnGeographyChanging(value);
                ReportPropertyChanging("Geography");
                _Geography = StructuralObject.SetValidValue(value, true, "Geography");
                ReportPropertyChanged("Geography");
                OnGeographyChanged();
            }
        }
        private global::System.Data.Spatial.DbGeography _Geography;
        partial void OnGeographyChanging(global::System.Data.Spatial.DbGeography value);
        partial void OnGeographyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value, "StateId");
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private global::System.Int64 _StateId;
        partial void OnStateIdChanging(global::System.Int64 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CountyId
        {
            get
            {
                return _CountyId;
            }
            set
            {
                OnCountyIdChanging(value);
                ReportPropertyChanging("CountyId");
                _CountyId = StructuralObject.SetValidValue(value, "CountyId");
                ReportPropertyChanged("CountyId");
                OnCountyIdChanged();
            }
        }
        private global::System.Int64 _CountyId;
        partial void OnCountyIdChanging(global::System.Int64 value);
        partial void OnCountyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SEOKey
        {
            get
            {
                return _SEOKey;
            }
            set
            {
                OnSEOKeyChanging(value);
                ReportPropertyChanging("SEOKey");
                _SEOKey = StructuralObject.SetValidValue(value, true, "SEOKey");
                ReportPropertyChanged("SEOKey");
                OnSEOKeyChanged();
            }
        }
        private global::System.String _SEOKey;
        partial void OnSEOKeyChanging(global::System.String value);
        partial void OnSEOKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SizeUp.Data", "FK_City_County", "County")]
        public County County
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("SizeUp.Data.FK_City_County", "County").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("SizeUp.Data.FK_City_County", "County").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<County> CountyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("SizeUp.Data.FK_City_County", "County");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<County>("SizeUp.Data.FK_City_County", "County", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SizeUp.Data", "FK_City_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("SizeUp.Data.FK_City_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("SizeUp.Data.FK_City_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("SizeUp.Data.FK_City_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("SizeUp.Data.FK_City_State", "State", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SizeUp.Data", Name="County")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class County : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new County object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="fIPS">Initial value of the FIPS property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="longName">Initial value of the LongName property.</param>
        /// <param name="geography">Initial value of the Geography property.</param>
        public static County CreateCounty(global::System.Int64 id, global::System.Int64 stateId, global::System.String fIPS, global::System.String name, global::System.String longName, global::System.Data.Spatial.DbGeography geography)
        {
            County county = new County();
            county.Id = id;
            county.StateId = stateId;
            county.FIPS = fIPS;
            county.Name = name;
            county.LongName = longName;
            county.Geography = geography;
            return county;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value, "StateId");
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private global::System.Int64 _StateId;
        partial void OnStateIdChanging(global::System.Int64 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MetroId
        {
            get
            {
                return _MetroId;
            }
            set
            {
                OnMetroIdChanging(value);
                ReportPropertyChanging("MetroId");
                _MetroId = StructuralObject.SetValidValue(value, "MetroId");
                ReportPropertyChanged("MetroId");
                OnMetroIdChanged();
            }
        }
        private Nullable<global::System.Int64> _MetroId;
        partial void OnMetroIdChanging(Nullable<global::System.Int64> value);
        partial void OnMetroIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FIPS
        {
            get
            {
                return _FIPS;
            }
            set
            {
                OnFIPSChanging(value);
                ReportPropertyChanging("FIPS");
                _FIPS = StructuralObject.SetValidValue(value, false, "FIPS");
                ReportPropertyChanged("FIPS");
                OnFIPSChanged();
            }
        }
        private global::System.String _FIPS;
        partial void OnFIPSChanging(global::System.String value);
        partial void OnFIPSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LongName
        {
            get
            {
                return _LongName;
            }
            set
            {
                OnLongNameChanging(value);
                ReportPropertyChanging("LongName");
                _LongName = StructuralObject.SetValidValue(value, false, "LongName");
                ReportPropertyChanged("LongName");
                OnLongNameChanged();
            }
        }
        private global::System.String _LongName;
        partial void OnLongNameChanging(global::System.String value);
        partial void OnLongNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeography Geography
        {
            get
            {
                return _Geography;
            }
            set
            {
                OnGeographyChanging(value);
                ReportPropertyChanging("Geography");
                _Geography = StructuralObject.SetValidValue(value, false, "Geography");
                ReportPropertyChanged("Geography");
                OnGeographyChanged();
            }
        }
        private global::System.Data.Spatial.DbGeography _Geography;
        partial void OnGeographyChanging(global::System.Data.Spatial.DbGeography value);
        partial void OnGeographyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SizeUp.Data", "FK_City_County", "City")]
        public EntityCollection<City> Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("SizeUp.Data.FK_City_County", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("SizeUp.Data.FK_City_County", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SizeUp.Data", "FK_County_Metro", "Metro")]
        public Metro Metro
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Metro>("SizeUp.Data.FK_County_Metro", "Metro").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Metro>("SizeUp.Data.FK_County_Metro", "Metro").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Metro> MetroReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Metro>("SizeUp.Data.FK_County_Metro", "Metro");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Metro>("SizeUp.Data.FK_County_Metro", "Metro", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SizeUp.Data", "FK_County_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("SizeUp.Data.FK_County_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("SizeUp.Data.FK_County_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("SizeUp.Data.FK_County_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("SizeUp.Data.FK_County_State", "State", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SizeUp.Data", Name="Industry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Industry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Industry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sicCode">Initial value of the SicCode property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sEOKey">Initial value of the SEOKey property.</param>
        public static Industry CreateIndustry(global::System.Int64 id, global::System.String sicCode, global::System.String name, global::System.String sEOKey)
        {
            Industry industry = new Industry();
            industry.Id = id;
            industry.SicCode = sicCode;
            industry.Name = name;
            industry.SEOKey = sEOKey;
            return industry;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SicCode
        {
            get
            {
                return _SicCode;
            }
            set
            {
                OnSicCodeChanging(value);
                ReportPropertyChanging("SicCode");
                _SicCode = StructuralObject.SetValidValue(value, false, "SicCode");
                ReportPropertyChanged("SicCode");
                OnSicCodeChanged();
            }
        }
        private global::System.String _SicCode;
        partial void OnSicCodeChanging(global::System.String value);
        partial void OnSicCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IndustrySpecificCode
        {
            get
            {
                return _IndustrySpecificCode;
            }
            set
            {
                OnIndustrySpecificCodeChanging(value);
                ReportPropertyChanging("IndustrySpecificCode");
                _IndustrySpecificCode = StructuralObject.SetValidValue(value, true, "IndustrySpecificCode");
                ReportPropertyChanged("IndustrySpecificCode");
                OnIndustrySpecificCodeChanged();
            }
        }
        private global::System.String _IndustrySpecificCode;
        partial void OnIndustrySpecificCodeChanging(global::System.String value);
        partial void OnIndustrySpecificCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SEOKey
        {
            get
            {
                return _SEOKey;
            }
            set
            {
                OnSEOKeyChanging(value);
                ReportPropertyChanging("SEOKey");
                _SEOKey = StructuralObject.SetValidValue(value, false, "SEOKey");
                ReportPropertyChanged("SEOKey");
                OnSEOKeyChanged();
            }
        }
        private global::System.String _SEOKey;
        partial void OnSEOKeyChanging(global::System.String value);
        partial void OnSEOKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SizeUp.Data", "FK_IndustryKeyword_Industry", "IndustryKeyword")]
        public EntityCollection<IndustryKeyword> IndustryKeywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IndustryKeyword>("SizeUp.Data.FK_IndustryKeyword_Industry", "IndustryKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IndustryKeyword>("SizeUp.Data.FK_IndustryKeyword_Industry", "IndustryKeyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SizeUp.Data", "FK_SicToNAICSMapping_Industry", "SicToNAICSMapping")]
        public EntityCollection<SicToNAICSMapping> SicToNAICSMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SicToNAICSMapping>("SizeUp.Data.FK_SicToNAICSMapping_Industry", "SicToNAICSMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SicToNAICSMapping>("SizeUp.Data.FK_SicToNAICSMapping_Industry", "SicToNAICSMapping", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SizeUp.Data", Name="IndustryKeyword")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IndustryKeyword : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IndustryKeyword object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="industryId">Initial value of the IndustryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static IndustryKeyword CreateIndustryKeyword(global::System.Int64 id, global::System.Int64 industryId, global::System.String name, global::System.Int32 sortOrder)
        {
            IndustryKeyword industryKeyword = new IndustryKeyword();
            industryKeyword.Id = id;
            industryKeyword.IndustryId = industryId;
            industryKeyword.Name = name;
            industryKeyword.SortOrder = sortOrder;
            return industryKeyword;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IndustryId
        {
            get
            {
                return _IndustryId;
            }
            set
            {
                OnIndustryIdChanging(value);
                ReportPropertyChanging("IndustryId");
                _IndustryId = StructuralObject.SetValidValue(value, "IndustryId");
                ReportPropertyChanged("IndustryId");
                OnIndustryIdChanged();
            }
        }
        private global::System.Int64 _IndustryId;
        partial void OnIndustryIdChanging(global::System.Int64 value);
        partial void OnIndustryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SizeUp.Data", "FK_IndustryKeyword_Industry", "Industry")]
        public Industry Industry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("SizeUp.Data.FK_IndustryKeyword_Industry", "Industry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("SizeUp.Data.FK_IndustryKeyword_Industry", "Industry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Industry> IndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("SizeUp.Data.FK_IndustryKeyword_Industry", "Industry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Industry>("SizeUp.Data.FK_IndustryKeyword_Industry", "Industry", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SizeUp.Data", Name="Metro")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Metro : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Metro object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fIPS">Initial value of the FIPS property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="geography">Initial value of the Geography property.</param>
        public static Metro CreateMetro(global::System.Int64 id, global::System.String fIPS, global::System.String name, global::System.Data.Spatial.DbGeography geography)
        {
            Metro metro = new Metro();
            metro.Id = id;
            metro.FIPS = fIPS;
            metro.Name = name;
            metro.Geography = geography;
            return metro;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FIPS
        {
            get
            {
                return _FIPS;
            }
            set
            {
                OnFIPSChanging(value);
                ReportPropertyChanging("FIPS");
                _FIPS = StructuralObject.SetValidValue(value, false, "FIPS");
                ReportPropertyChanged("FIPS");
                OnFIPSChanged();
            }
        }
        private global::System.String _FIPS;
        partial void OnFIPSChanging(global::System.String value);
        partial void OnFIPSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeography Geography
        {
            get
            {
                return _Geography;
            }
            set
            {
                OnGeographyChanging(value);
                ReportPropertyChanging("Geography");
                _Geography = StructuralObject.SetValidValue(value, false, "Geography");
                ReportPropertyChanged("Geography");
                OnGeographyChanged();
            }
        }
        private global::System.Data.Spatial.DbGeography _Geography;
        partial void OnGeographyChanging(global::System.Data.Spatial.DbGeography value);
        partial void OnGeographyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SizeUp.Data", "FK_County_Metro", "County")]
        public EntityCollection<County> Counties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<County>("SizeUp.Data.FK_County_Metro", "County");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<County>("SizeUp.Data.FK_County_Metro", "County", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SizeUp.Data", Name="NAICS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NAICS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NAICS object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nAICSCode">Initial value of the NAICSCode property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static NAICS CreateNAICS(global::System.Int64 id, global::System.String nAICSCode, global::System.String name)
        {
            NAICS nAICS = new NAICS();
            nAICS.Id = id;
            nAICS.NAICSCode = nAICSCode;
            nAICS.Name = name;
            return nAICS;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAICSCode
        {
            get
            {
                return _NAICSCode;
            }
            set
            {
                OnNAICSCodeChanging(value);
                ReportPropertyChanging("NAICSCode");
                _NAICSCode = StructuralObject.SetValidValue(value, false, "NAICSCode");
                ReportPropertyChanged("NAICSCode");
                OnNAICSCodeChanged();
            }
        }
        private global::System.String _NAICSCode;
        partial void OnNAICSCodeChanging(global::System.String value);
        partial void OnNAICSCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SizeUp.Data", "FK_SicToNAICSMapping_NAICS", "SicToNAICSMapping")]
        public EntityCollection<SicToNAICSMapping> SicToNAICSMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SicToNAICSMapping>("SizeUp.Data.FK_SicToNAICSMapping_NAICS", "SicToNAICSMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SicToNAICSMapping>("SizeUp.Data.FK_SicToNAICSMapping_NAICS", "SicToNAICSMapping", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SizeUp.Data", Name="SicToNAICSMapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SicToNAICSMapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SicToNAICSMapping object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="industryId">Initial value of the IndustryId property.</param>
        /// <param name="nAICSId">Initial value of the NAICSId property.</param>
        public static SicToNAICSMapping CreateSicToNAICSMapping(global::System.Int64 id, global::System.Int64 industryId, global::System.Int64 nAICSId)
        {
            SicToNAICSMapping sicToNAICSMapping = new SicToNAICSMapping();
            sicToNAICSMapping.Id = id;
            sicToNAICSMapping.IndustryId = industryId;
            sicToNAICSMapping.NAICSId = nAICSId;
            return sicToNAICSMapping;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IndustryId
        {
            get
            {
                return _IndustryId;
            }
            set
            {
                OnIndustryIdChanging(value);
                ReportPropertyChanging("IndustryId");
                _IndustryId = StructuralObject.SetValidValue(value, "IndustryId");
                ReportPropertyChanged("IndustryId");
                OnIndustryIdChanged();
            }
        }
        private global::System.Int64 _IndustryId;
        partial void OnIndustryIdChanging(global::System.Int64 value);
        partial void OnIndustryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NAICSId
        {
            get
            {
                return _NAICSId;
            }
            set
            {
                OnNAICSIdChanging(value);
                ReportPropertyChanging("NAICSId");
                _NAICSId = StructuralObject.SetValidValue(value, "NAICSId");
                ReportPropertyChanged("NAICSId");
                OnNAICSIdChanged();
            }
        }
        private global::System.Int64 _NAICSId;
        partial void OnNAICSIdChanging(global::System.Int64 value);
        partial void OnNAICSIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SizeUp.Data", "FK_SicToNAICSMapping_Industry", "Industry")]
        public Industry Industry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("SizeUp.Data.FK_SicToNAICSMapping_Industry", "Industry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("SizeUp.Data.FK_SicToNAICSMapping_Industry", "Industry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Industry> IndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("SizeUp.Data.FK_SicToNAICSMapping_Industry", "Industry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Industry>("SizeUp.Data.FK_SicToNAICSMapping_Industry", "Industry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SizeUp.Data", "FK_SicToNAICSMapping_NAICS", "NAICS")]
        public NAICS NAIC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NAICS>("SizeUp.Data.FK_SicToNAICSMapping_NAICS", "NAICS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NAICS>("SizeUp.Data.FK_SicToNAICSMapping_NAICS", "NAICS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NAICS> NAICReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NAICS>("SizeUp.Data.FK_SicToNAICSMapping_NAICS", "NAICS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NAICS>("SizeUp.Data.FK_SicToNAICSMapping_NAICS", "NAICS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SizeUp.Data", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fIPS">Initial value of the FIPS property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="abbreviation">Initial value of the Abbreviation property.</param>
        /// <param name="geography">Initial value of the Geography property.</param>
        public static State CreateState(global::System.Int64 id, global::System.String fIPS, global::System.String name, global::System.String abbreviation, global::System.Data.Spatial.DbGeography geography)
        {
            State state = new State();
            state.Id = id;
            state.FIPS = fIPS;
            state.Name = name;
            state.Abbreviation = abbreviation;
            state.Geography = geography;
            return state;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FIPS
        {
            get
            {
                return _FIPS;
            }
            set
            {
                OnFIPSChanging(value);
                ReportPropertyChanging("FIPS");
                _FIPS = StructuralObject.SetValidValue(value, false, "FIPS");
                ReportPropertyChanged("FIPS");
                OnFIPSChanged();
            }
        }
        private global::System.String _FIPS;
        partial void OnFIPSChanging(global::System.String value);
        partial void OnFIPSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Abbreviation
        {
            get
            {
                return _Abbreviation;
            }
            set
            {
                OnAbbreviationChanging(value);
                ReportPropertyChanging("Abbreviation");
                _Abbreviation = StructuralObject.SetValidValue(value, false, "Abbreviation");
                ReportPropertyChanged("Abbreviation");
                OnAbbreviationChanged();
            }
        }
        private global::System.String _Abbreviation;
        partial void OnAbbreviationChanging(global::System.String value);
        partial void OnAbbreviationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeography Geography
        {
            get
            {
                return _Geography;
            }
            set
            {
                OnGeographyChanging(value);
                ReportPropertyChanging("Geography");
                _Geography = StructuralObject.SetValidValue(value, false, "Geography");
                ReportPropertyChanged("Geography");
                OnGeographyChanged();
            }
        }
        private global::System.Data.Spatial.DbGeography _Geography;
        partial void OnGeographyChanging(global::System.Data.Spatial.DbGeography value);
        partial void OnGeographyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SizeUp.Data", "FK_City_State", "City")]
        public EntityCollection<City> Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("SizeUp.Data.FK_City_State", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("SizeUp.Data.FK_City_State", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SizeUp.Data", "FK_County_State", "County")]
        public EntityCollection<County> Counties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<County>("SizeUp.Data.FK_County_State", "County");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<County>("SizeUp.Data.FK_County_State", "County", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SizeUp.Data", Name="ZipCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZipCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ZipCode object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="zIP">Initial value of the ZIP property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="geography">Initial value of the Geography property.</param>
        public static ZipCode CreateZipCode(global::System.Int64 id, global::System.String zIP, global::System.String name, global::System.Data.Spatial.DbGeography geography)
        {
            ZipCode zipCode = new ZipCode();
            zipCode.Id = id;
            zipCode.ZIP = zIP;
            zipCode.Name = name;
            zipCode.Geography = geography;
            return zipCode;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ZIP
        {
            get
            {
                return _ZIP;
            }
            set
            {
                OnZIPChanging(value);
                ReportPropertyChanging("ZIP");
                _ZIP = StructuralObject.SetValidValue(value, false, "ZIP");
                ReportPropertyChanged("ZIP");
                OnZIPChanged();
            }
        }
        private global::System.String _ZIP;
        partial void OnZIPChanging(global::System.String value);
        partial void OnZIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeography Geography
        {
            get
            {
                return _Geography;
            }
            set
            {
                OnGeographyChanging(value);
                ReportPropertyChanging("Geography");
                _Geography = StructuralObject.SetValidValue(value, false, "Geography");
                ReportPropertyChanged("Geography");
                OnGeographyChanged();
            }
        }
        private global::System.Data.Spatial.DbGeography _Geography;
        partial void OnGeographyChanging(global::System.Data.Spatial.DbGeography value);
        partial void OnGeographyChanged();

        #endregion

    }

    #endregion

}
