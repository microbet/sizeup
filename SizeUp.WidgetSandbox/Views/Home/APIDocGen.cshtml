@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section head{

    <script src="https://api-beta.sizeup.com/js/?callback=apiLoaded&apikey=6388E63C-3D44-472B-A424-712395B1AD51"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
    <script src="@Url.Content("~/Scripts/mustache.js")"></script>

}

<script type="text/template" id="template">
    <h1>Industry Benchmarking Data for Your Site</h1>

    <p>
    You can include industry benchmarking data on your very own site using SizeUp’s API.
         After reviewing the documentation, if you think the SizeUp API is right for you, contact us at <a href="mailto:info@SizeUp.com">info@sizeup.com</a> 
        for pricing information, and we will set you up with your own API key.
    </p> 

    <h2>Getting Started</h2>
    <p>After you have obtained your API key, include a reference to the api loader script in your head tag of your page.</p>

    <h2>Basic Example</h2>
<pre class="prettyprint">
&lt;html&gt;
    &lt;head&gt;
        &lt;script src="http://api.sizeup.com/js/?callback=loaded&apikey=YOUR_API_KEY_HERE"&gt;&lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
              
        &lt;p id="placeResults"&gt;&lt;/p&gt;

        &lt;p id="industryResults"&gt;&lt;/p&gt;

        &lt;script type="text/javascript"&gt;
            var loaded = function () {       
                sizeup.api.data.findPlace({ term: 'bost' }, function (data) {
                    var d = '';
                    for (var x = 0; x &lt; data.length; x++) {
                        d = d + data[x].City.Name + ',' + data[x].State.Abbreviation + '&lt;br/&gt;';
                    }
                    document.getElementById('placeResults').innerHTML = d;
                });

                sizeup.api.data.findIndustry({ term: 'pharm' }, function (data) {
                    var d = '';
                    for (var x = 0; x &lt; data.length; x++) {
                        d = d + data[x].Name + '&lt;br/&gt;';
                    }
                    document.getElementById('industryResults').innerHTML = d;
                });
            };
        &lt;/script&gt;  
    &lt;/body&gt;
&lt;/html&gt;
</pre>

    <h2>Granularity <a name="granularity"></a></h2>
    <p>
    sizeup.api.granularity is an enumeration object that provides static values for granularity parameters in the Data API. 
    Granularity parameters are used to specify receiving values on the City, County, Metro etc. level.
    </p>
    <p>All supported granularity parameters are:</p>
    <pre class="prettyprint">
    sizeup.api.granularity.ZIP_CODE;
    sizeup.api.granularity.CITY;
    sizeup.api.granularity.COUNTY;
    sizeup.api.granularity.PLACE;
    sizeup.api.granularity.METRO;
    sizeup.api.granularity.STATE;
    sizeup.api.granularity.NATION;
    </pre>

    <h2>Range <a name="range"></a></h2>
    <p>
    sizeup.api.range is range parameter used for some Data API methods.
    </p>
    <pre class="prettyprint">
    //creates a range object and sets the minimum bound to 1 and the maximum bound to 5
    var range = sizeup.api.range(1, 5);
    //changes the bounds to 10 and 50
    range.min(10);
    range.max(50);
    //gets the min and max values in the range object.
    range.min();
    range.max();

    </pre>


    <h2>Data API</h2>
    <p>The data API is exposed via the sizeup.api.data object. The data API has a number of methods to access different types of data available through the API.</p>
    <p>Each method has the same basic signature:</p>
    <pre class="prettyprint">
        sizeup.api.data.findPlace({ term: 'san franc', maxResults: 10 }, 
            function(data){
                //your code to handle the returned data
            }, 
            function(){
                //your code on error
            });
    </pre>


    <h2>Data API Methods</h2>
    <dl>
        {{#sections}}
        <dt>{{label}}</dt>
        {{#items}}
        <dd><a href="#{{functionName}}">{{functionName}}</a></dd>
        {{/items}}
        {{/sections}}           
    </dl>


    {{#sections}}
    <h1>{{label}}</h1>
     {{#items}}
      <div class="method">
        <h2>
            sizeup.api.data.{{functionName}}
            <a name="{{functionName}}"></a>
        </h2>
        <p>{{description}}</p>
        <table class="params">
            <thead>
                <tr>
                    <td class="param">Parameter</td>
                    <td class="type">Type</td>
                    <td class="default">Default Value</td>
                    <td class="description">Description</td>
                </tr>
            </thead>
            <tbody>
                {{#params}}
                <tr>
                    <td class="param">
                        {{name}}
                    </td>
                    <td class="type">{{&type}}</td>
                    <td class="default">
                        {{defaultValue}}
                    </td>
                    <td class="description">
                        {{&description}}
                        {{#supportedOptions}}
                        <br/></br>
                        <strong>Supported Options:</strong>
                        <ul>
                        {{#options}}<li>{{value}}</li>{{/options}}
                        </ul>
                        {{/supportedOptions}}
                    </td>
                </tr> 
                {{/params}}              
            </tbody>
        </table>
        <h3>Usage</h3>
<pre class="prettyprint">
sizeup.api.data.{{functionName}}( {{exampleParamsOutput}} );
</pre>
        <h3>Results</h3>
<pre class="prettyprint">{{results}}</pre>
       
    </div>
    {{/items}}
    {{/sections}}
</script>

<div id="documentation">

</div>

<script type="text/javascript">
    
   
    var template = $('#template').html();
    var jqueryLoaded = false;
    var api = false;
    var runScript = null;

    var formatOutputParams = function (p) {
        var formatters = [
            { pat: /"ZipCode"/g, replacer: 'sizeup.api.granularity.ZIP_CODE' },
            { pat: /"City"/g, replacer: 'sizeup.api.granularity.CITY' },
            { pat: /"County"/g, replacer: 'sizeup.api.granularity.COUNTY' },
            { pat: /"Place"/g, replacer: 'sizeup.api.granularity.PLACE' },
            { pat: /"Metro"/g, replacer: 'sizeup.api.granularity.METRO' },
            { pat: /"State"/g, replacer: 'sizeup.api.granularity.STATE' },
            { pat: /"Nation"/g, replacer: 'sizeup.api.granularity.NATION' },
            { pat: /"new sizeup.api.range(.*)"/g, replacer: 'sizeup.api.range$1' }

        ];
        for (var x = 0; x < formatters.length; x++) {
           p = p.replace(formatters[x].pat, formatters[x].replacer);
        }       
        return p;
    };



    var getResults = function (item, callback) {
        var p = $.extend(true, {}, item.exampleParams);
        if (item.functionName == 'getJobChangePercentile')
            console.log('sdf');
        sizeup.api.data[item.functionName](p, function (d) {
            if(d == null)
                console.log('sdf');
            if (d != null) {
                item.results = JSON.stringify(d, null, 4).replace(/"(\w+)"\s*:/g, '$1:');
                item.isComplete = true;
                item.exampleParamsOutput = formatOutputParams(JSON.stringify(item.exampleParams, null, 4)).replace(/"(\w+)"\s*:/g, '$1:');
                callback();
            }
                
            
        });
    };

    var checkComplete = function(){
        var complete = true;
        for (var section in runScript) {
            for (var item in runScript[section].items) {
                complete = complete && runScript[section].items[item].isComplete == true;
            }
        }
        return complete;
    };


    var loaded = function () {
        if (jqueryLoaded && api) {
            for (var section in runScript) {
                for (var item in runScript[section].items) {
                    getResults(runScript[section].items[item], function () {
                        if (checkComplete()) {
                            document.getElementById("documentation").innerHTML = Mustache.to_html(template, { sections: runScript });
                        }
                    });
                }
            }
        }
    };


    var apiLoaded = function () {
        api = true;
        runScript = createRunScript();
        loaded();
    };

    $(document).ready(function () {
        jqueryLoaded = true;
        loaded();
    });





    var createRunScript = function ()
    {
        var s = [
                    {
                    label: 'Place',
                    items: [
                        {
                            functionName: 'findPlace',
                            description: 'Returns a list of places based on a search term.',
                            params: [
                                {
                                    name: 'term',
                                    type: 'string',
                                    defaultValue: 'Required',
                                    description: 'Search string for a place.'

                                },
                                {
                                    name: 'maxResults',
                                    type: 'number',
                                    defaultValue: '35',
                                    description: 'Maximum number of results to return.'
                                }
                            ],
                            exampleParams: { term: 'san fran' }
                        },
                        {
                            functionName: 'getPlace',
                            description: 'Returns a single place based on a place id.',
                            params: [
                                {
                                    name: 'id',
                                    type: 'number',
                                    defaultValue: 'Required',
                                    description: 'Place Id for the place to return'

                                }
                            ],
                            exampleParams: { id: 3051 }
                        }
                    ]
                },
                {
                    label: 'Industry',
                    items: [
                        {
                            functionName: 'findIndustry',
                            description: 'Returns a list of industries based on a search term.',
                            params: [
                                {
                                    name: 'term',
                                    type: 'string',
                                    defaultValue: 'Required',
                                    description: 'Search string for an industry.'

                                },
                                {
                                    name: 'maxResults',
                                    type: 'number',
                                    defaultValue: '35',
                                    description: 'Maximum number of results to return.'
                                }
                            ],
                            exampleParams: { term: 'pharma' }
                        },
                        {
                            functionName: 'getIndustry',
                            description: 'Returns a single industry based on an industry id.',
                            params: [
                                {
                                    name: 'id',
                                    type: 'number or Array<number>',
                                    defaultValue: 'Required',
                                    description: 'IndustryId or an array of industryIds for the industries requested.'

                                }
                            ],
                            exampleParams: { id: 8589 }
                        }
                    ]
                },
                {
                    label: 'Industry Data',
                    items: [
                                {
                                    functionName: 'getAverageRevenue',
                                    description: 'Returns the average revenue for an industry/geographic location combination.',
                                    params: [
                                        {
                                            name: 'industryId',
                                            type: 'number',
                                            defaultValue: 'Required',
                                            description: 'Id of the industry.'
                                        },
                                        {
                                            name: 'geographicLocationId',
                                            type: 'number',
                                            defaultValue: 'Required',
                                            description: 'Id of the geographic location.'
                                        }
                                    ],
                                    exampleParams: { geographicLocationId: 82478, industryId: 8589 }
                                },
                                {
                                    functionName: 'getAverageRevenuePercentile',
                                    description: 'Returns a value\'s revenue percentile for an industry/geographic location combination.',
                                    params: [
                                        {
                                            name: 'industryId',
                                            type: 'number',
                                            defaultValue: 'Required',
                                            description: 'Id of the industry.'
                                        },
                                        {
                                            name: 'geographicLocationId',
                                            type: 'number',
                                            defaultValue: 'Required',
                                            description: 'Id of the geographic location.'
                                        },
                                        {
                                            name: 'value',
                                            type: 'number',
                                            defaultValue: 'Required',
                                            description: 'Revenue used to calculate the percentile.'
                                        }
                                    ],
                                    exampleParams: { geographicLocationId: 82478, industryId: 8589, value: 3200000 }
                                },
                                {
                                    functionName: 'getAverageRevenueBands',
                                    description: 'Returns the average revenue quantile ranges for an industry at specific unit and granularity, used to construct bands for heatmap legend.',
                                    params: [
                                        {
                                            name: 'industryId',
                                            type: 'number',
                                            defaultValue: 'Required',
                                            description: 'Id of the industry.'
                                        },
                                        {
                                            name: 'boundingGeographicLocationId',
                                            type: 'number',
                                            defaultValue: 'Required',
                                            description: 'Id of the geographic location that bounds sub geographic locations\' values used in the quantile.'
                                        },
                                        {
                                            name: 'granularity',
                                            type: '<a href="#granularity">sizeup.api.granularity</a>',
                                            defaultValue: 'Required',
                                            description: 'Level of granularity to use in the calculation of the quantile.',
                                            supportedOptions: { options: [{ value: 'sizeup.api,granularity.ZIP_CODE' }, { value: 'sizeup.api.granularity.COUNTY' }, { value: 'sizeup.api.granularity.STATE' }] }
                                        },
                                        {
                                            name: 'bands',
                                            type: 'number',
                                            defaultValue: 'Required',
                                            description: 'Number of bands to calculate.'
                                        }
                                    ],
                                    exampleParams: { boundingGeographicLocationId: 126178, industryId: 8589, granularity: sizeup.api.granularity.ZIP_CODE, bands: 7 }

                                },
    {
        functionName: 'getAverageEmployees',
        description: 'Returns the average employees for an industry/geographic location combination.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            }
        ],
        exampleParams: { geographicLocationId: 82478, industryId: 8589 }
    },
                                {
                                    functionName: 'getAverageEmployeesPercentile',
                                    description: 'Returns a value\'s employees percentile for an industry/geographic location combination.',
                                    params: [
                                        {
                                            name: 'industryId',
                                            type: 'number',
                                            defaultValue: 'Required',
                                            description: 'Id of the industry.'
                                        },
                                        {
                                            name: 'geographicLocationId',
                                            type: 'number',
                                            defaultValue: 'Required',
                                            description: 'Id of the geographic location.'
                                        },
                                        {
                                            name: 'value',
                                            type: 'number',
                                            defaultValue: 'Required',
                                            description: 'Employees used to calculate the percentile.'
                                        }
                                    ],
                                    exampleParams: { geographicLocationId: 82478, industryId: 8589, value: 5 }
                                },
                                {
                                    functionName: 'getAverageEmployeesBands',
                                    description: 'Returns the average employees quantile ranges for an industry at specific unit and granularity, used to construct bands for heatmap legend.',
                                    params: [
                                        {
                                            name: 'industryId',
                                            type: 'number',
                                            defaultValue: 'Required',
                                            description: 'Id of the industry.'
                                        },
                                        {
                                            name: 'boundingGeographicLocationId',
                                            type: 'number',
                                            defaultValue: 'Required',
                                            description: 'Id of the geographic location that bounds sub geographic locations\' values used in the quantile.'
                                        },
                                        {
                                            name: 'granularity',
                                            type: '<a href="#granularity">sizeup.api.granularity</a>',
                                            defaultValue: 'Required',
                                            description: 'Level of granularity to use in the calculation of the quantile.',
                                            supportedOptions: { options: [{ value: 'sizeup.api,granularity.ZIP_CODE' }, { value: 'sizeup.api.granularity.COUNTY' }, { value: 'sizeup.api.granularity.STATE' }] }
                                        },
                                        {
                                            name: 'bands',
                                            type: 'number',
                                            defaultValue: 'Required',
                                            description: 'Number of bands to calculate.'
                                        }
                                    ],
                                    exampleParams: { boundingGeographicLocationId: 126178, industryId: 8589, granularity: sizeup.api.granularity.ZIP_CODE, bands: 7 }

                                },
    {
        functionName: 'getAverageSalary',
        description: 'Returns the average salary for an industry/geographic location combination.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            }
        ],
        exampleParams: { geographicLocationId: 126178, industryId: 8589 }
    },
    {
        functionName: 'getAverageSalaryPercentage',
        description: 'Returns the percentage a value is above/below an industry/place combination’s average salary',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            },
            {
                name: 'value',
                type: 'number',
                defaultValue: 'Required',
                description: 'Salary used to calculate the percentile.'
            }
        ],
        exampleParams: { geographicLocationId: 126178, industryId: 8589, value: 38000 }
    },
    {
        functionName: 'getAverageSalaryBands',
        description: 'Returns the average salary quantile ranges for an industry at specific unit and granularity, used to construct bands for heatmap legend.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'boundingGeographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location that bounds sub geographic locations\' values used in the quantile.'
            },
            {
                name: 'granularity',
                type: '<a href="#granularity">sizeup.api.granularity</a>',
                defaultValue: 'Required',
                description: 'Granularity level of the placeId.',
                supportedOptions: { options: [{ value: 'sizeup.api.granularity.COUNTY' }, { value: 'sizeup.api.granularity.STATE' }] }
            },
            {
                name: 'bands',
                type: 'number',
                defaultValue: 'Required',
                description: 'Number of bands to calculate.'
            }
        ],
        exampleParams: { boundingGeographicLocationId: 130073, industryId: 8589, granularity: sizeup.api.granularity.COUNTY, bands: 7 }
    },

    {
        functionName: 'getCostEffectiveness',
        description: 'Returns the cost effectiveness for an industry/geographic location combination.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            }
        ],
        exampleParams: { geographicLocationId: 126178, industryId: 8589}
    },
    {
        functionName: 'getCostEffectivenessPercentage',
        description: 'Returns the percentage a cost effectiveness value is above/below an industry/place combination’s cost effectiveness',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            },
            {
                name: 'salary',
                type: 'number',
                defaultValue: 'Required',
                description: 'Salary used to calculate the percentage.'
            },
            {
                name: 'employees',
                type: 'number',
                defaultValue: 'Required',
                description: 'Employees used to calculate the percentage.'
            },
            {
                name: 'revenue',
                type: 'number',
                defaultValue: 'Required',
                description: 'Revenue used to calculate the percentage.'
            }
        ],
        exampleParams: { geographicLocationId: 126178, industryId: 8589, employees: 24, salary: 45000, revenue: 3500000 }
    },
    {
        functionName: 'getCostEffectivenessBands',
        description: 'Returns the cost effectiveness quantile ranges for an industry at specific unit and granularity, used to construct bands for heatmap legend.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'boundingGeographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location that bounds sub geographic locations\' values used in the quantile.'
            },
            {
                name: 'granularity',
                type: '<a href="#granularity">sizeup.api.granularity</a>',
                defaultValue: 'Required',
                description: 'Granularity level of the placeId.',
                supportedOptions: { options: [{ value: 'sizeup.api.granularity.COUNTY' }, { value: 'sizeup.api.granularity.STATE' }] }
            },
            {
                name: 'bands',
                type: 'number',
                defaultValue: 'Required',
                description: 'Number of bands to calculate.'
            }
        ],
        exampleParams: { boundingGeographicLocationId: 130073, industryId: 8589, granularity: sizeup.api.granularity.COUNTY, bands: 7 }
    },

    {
        functionName: 'getEmployeesPerCapita',
        description: 'Returns the employees per capita for an industry/geographic location combination.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            }
        ],
        exampleParams: { geographicLocationId: 130073, industryId: 8589 }
    },
    {
        functionName: 'getEmployeesPerCapitaPercentile',
        description: 'Returns a value\'s employees per capita percentile for an industry/geographic location combination.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            },
            {
                name: 'boundingGeographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location that bounds sub geographic locations\' values used in the quantile.'
            }
        ],
        exampleParams: {boundingGeographicLocationId:129845, geographicLocationId: 130073, industryId: 8589}
    },
    {
        functionName: 'getEmployeesPerCapitaBands',
        description: 'Returns the employees per capita quantile ranges for an industry at specific unit and granularity, used to construct bands for heatmap legend.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'boundingGeographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location that bounds sub geographic locations\' values used in the quantile.'
            },
            {
                name: 'granularity',
                type: '<a href="#granularity">sizeup.api.granularity</a>',
                defaultValue: 'Required',
                description: 'Granularity level of the placeId.',
                supportedOptions: { options: [{ value: 'sizeup.api.granularity.ZIP_CODE' }, { value: 'sizeup.api.granularity.COUNTY' }, { value: 'sizeup.api.granularity.STATE' }] }
            },
            {
                name: 'bands',
                type: 'number',
                defaultValue: 'Required',
                description: 'Number of bands to calculate.'
            }
        ],
        exampleParams: { boundingGeographicLocationId: 130073, industryId: 8589, granularity: sizeup.api.granularity.COUNTY, bands: 7 }
    },
     {
         functionName: 'getHealthcareCost',
         description: 'Returns the healthcare cost for an industry/geographic location combination.',
         params: [
             {
                 name: 'industryId',
                 type: 'number',
                 defaultValue: 'Required',
                 description: 'Id of the industry.'
             },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            },
             {
                 name: 'employees',
                 type: 'number',
                 defaultValue: 'null',
                 description: 'Optional parameter used to return a more accurate healthcare cost based on number of employees in a business.'
             }

         ],
         exampleParams: { geographicLocationId: 130092, industryId: 8589 }
     },
     {
         functionName: 'getHealthcareCostPercentage',
         description: 'Returns the percentage a healthcare cost value is above/below an industry/place combination’s healthcare cost',
         params: [
             {
                 name: 'industryId',
                 type: 'number',
                 defaultValue: 'Required',
                 description: 'Id of the industry.'
             },
             {
                 name: 'geographicLocationId',
                 type: 'number',
                 defaultValue: 'Required',
                 description: 'Id of the geographic location.'
             },
             {
                 name: 'value',
                 type: 'number',
                 defaultValue: 'Required',
                 description: 'Healthcare cost used to calculate the percentage.'
             }
         ],
         exampleParams: { geographicLocationId: 130092, industryId: 8589, value: 4320  }
     },

     {
         functionName: 'getJobChange',
         description: 'Returns the job change for an industry/geographic location combination.',
         params: [
             {
                 name: 'industryId',
                 type: 'number',
                 defaultValue: 'Required',
                 description: 'Id of the industry.'
             },
             {
                 name: 'geographicLocationId',
                 type: 'number',
                 defaultValue: 'Required',
                 description: 'Id of the geographic location.'
             }
         ],
         exampleParams: { geographicLocationId: 130092, industryId: 8589 }
     },
    {
        functionName: 'getJobChangePercentile',
        description: 'Returns a value\'s job change percentile for an industry/geographic location combination.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            },
            {
                name: 'boundingGeographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location that bounds sub geographic locations\' values used in the quantile.'
            }
        ],
        exampleParams: { boundingGeographicLocationId:129845, geographicLocationId: 130073, industryId: 8589 }
    },

    {
        functionName: 'getRevenuePerCapita',
        description: 'Returns the revenue per capita in the industry for the level of granularity of a place.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            }
        ],
        exampleParams: { geographicLocationId: 129845, industryId: 8589 }
    },
    {
        functionName: 'getRevenuePerCapitaPercentile',
        description: 'Returns the percentile in the industry for the level of granularity of a place based on a supplied value.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            },
            {
                name: 'boundingGeographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location that bounds sub geographic locations\' values used in the quantile.'
            }
        ],
        exampleParams: { boundingGeographicLocationId:129845, geographicLocationId: 130073, industryId: 8589 }
    },
    {
        functionName: 'getRevenuePerCapitaBands',
        description: 'Returns the revenue per capita quantile ranges for an industry at specific unit and granularity, used to construct bands for heatmap legend.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'boundingGeographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location that bounds sub geographic locations\' values used in the quantile.'
            },
            {
                name: 'granularity',
                type: '<a href="#granularity">sizeup.api.granularity</a>',
                defaultValue: 'Required',
                description: 'Granularity level of the placeId.',
                supportedOptions: { options: [{ value: 'sizeup.api.granularity.ZIP_CODE' }, { value: 'sizeup.api.granularity.COUNTY' }, { value: 'sizeup.api.granularity.STATE' }] }
            },
            {
                name: 'bands',
                type: 'number',
                defaultValue: 'Required',
                description: 'Number of bands to calculate.'
            }
        ],
        exampleParams: { boundingGeographicLocationId: 130073, industryId: 8589, granularity: sizeup.api.granularity.COUNTY, bands: 7 }
    },


    {
        functionName: 'getTotalEmployees',
        description: 'Returns the total employees in the industry for the level of granularity of a place.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            }
        ],
        exampleParams: { geographicLocationId: 129845, industryId: 8589 }
    },
    {
        functionName: 'getTotalEmployeesBands',
        description: 'Returns the total employees quantile ranges for an industry at specific unit and granularity, used to construct bands for heatmap legend.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'boundingGeographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location that bounds sub geographic locations\' values used in the quantile.'
            },
            {
                name: 'granularity',
                type: '<a href="#granularity">sizeup.api.granularity</a>',
                defaultValue: 'Required',
                description: 'Granularity level of the placeId.',
                supportedOptions: { options: [{ value: 'sizeup.api.granularity.ZIP_CODE' }, { value: 'sizeup.api.granularity.COUNTY' }, { value: 'sizeup.api.granularity.STATE' }] }
            },
            {
                name: 'bands',
                type: 'number',
                defaultValue: 'Required',
                description: 'Number of bands to calculate.'
            }
        ],
        exampleParams: { boundingGeographicLocationId: 130073, industryId: 8589, granularity: sizeup.api.granularity.COUNTY, bands: 7 }
    },

    {
        functionName: 'getTotalRevenue',
        description: 'Returns the total revenue in the industry for the level of granularity of a place.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            }
        ],
        exampleParams: { geographicLocationId: 129845, industryId: 8589 }
    },
    {
        functionName: 'getTotalRevenueBands',
        description: 'Returns the total revenue quantile ranges for an industry at specific unit and granularity, used to construct bands for heatmap legend.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'boundingGeographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location that bounds sub geographic locations\' values used in the quantile.'
            },
            {
                name: 'granularity',
                type: '<a href="#granularity">sizeup.api.granularity</a>',
                defaultValue: 'Required',
                description: 'Granularity level of the placeId.',
                supportedOptions: { options: [{ value: 'sizeup.api.granularity.ZIP_CODE' }, { value: 'sizeup.api.granularity.COUNTY' }, { value: 'sizeup.api.granularity.STATE' }] }
            },
            {
                name: 'bands',
                type: 'number',
                defaultValue: 'Required',
                description: 'Number of bands to calculate.'
            }
        ],
        exampleParams: { boundingGeographicLocationId: 130073, industryId: 8589, granularity: sizeup.api.granularity.COUNTY, bands: 7 }
    },


    {
        functionName: 'getTurnover',
        description: 'Returns the turnover rate in the industry for the level of granularity of a place.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            }
        ],
        exampleParams: { geographicLocationId: 129845, industryId: 8589 }
    },
    {
        functionName: 'getTurnoverPercentile',
        description: 'Returns the percentile in the industry for the level of granularity of a place based on a geographic location\'s turnover value.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            },
            {
                name: 'boundingGeographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location that bounds sub geographic locations\' values used in the quantile.'
            }
        ],
        exampleParams: { boundingGeographicLocationId:129845, geographicLocationId: 130073, industryId: 8589 }
    },


    {
        functionName: 'getWorkersComp',
        description: 'Returns the workers comp in the industry for the level of granularity of a place.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            }
        ],
        exampleParams: { geographicLocationId: 129845, industryId: 8589 }
    },
    {
        functionName: 'getWorkersCompPercentage',
        description: 'Returns the percentage a workers comp value is above/below an industry/place combination’s workers comp',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            },
            {
                name: 'value',
                type: 'number',
                defaultValue: 'Required',
                description: 'Healthcare cost used to calculate the percentage.'
            }
        ],
        exampleParams: { geographicLocationId: 130073, industryId: 8589, value: 3.14  }
    },

    {
        functionName: 'getYearStarted',
        description: 'Returns the number of businesses that started between the start year and end year in the industry/geographic location combintation.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            },
            {
                name: 'startYear',
                type: 'number',
                defaultValue: 'Required',
                description: 'Year to start counting.'
            },
            {
                name: 'endYear',
                type: 'number',
                defaultValue: 'Required',
                description: 'Last year to return counts.'
            }
        ],
        exampleParams: { geographicLocationId: 130073, industryId: 8589, startYear: 1986, endYear:2010 }
    },
    {
        functionName: 'getYearStartedPercentile',
        description: 'Returns the percentile in the industry for the level of granularity of a place based on a geographic location\'s year started for the given year.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'geographicLocationId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the geographic location.'
            },            
            {
                name: 'value',
                type: 'number',
                defaultValue: 'Required',
                description: 'Year to calculate percentile.'
            }
        ],
        exampleParams: {  geographicLocationId: 130073, industryId: 8589, value: 1998 }
    }/*,
    {
        functionName: 'getBestPlaces',
        description: 'Returns a list of places based on a supplied granularity level, sorted by a given attribute that meets supplied filters.',
        params: [
            {
                name: 'industryId',
                type: 'number',
                defaultValue: 'Required',
                description: 'Id of the industry.'
            },
            {
                name: 'granularity',
                type: '<a href="#granularity">sizeup.api.granularity</a>',
                defaultValue: 'Required',
                description: 'Granularity level of the returned results.',
                supportedOptions: { options: [{ value: 'sizeup.api.granularity.CITY' }, { value: 'sizeup.api.granularity.COUNTY' }, { value: 'sizeup.api.granularity.METRO' }, { value: 'sizeup.api.granularity.STATE' }] }
            },
            {
                name: 'itemCount',
                type: 'number',
                defaultValue: 'Required',
                description: 'Number of results to return.'
            },
            {
                name: 'regionId',
                type: 'number',
                defaultValue: 'null',
                description: 'Id of the region to restrict the results.'
            },
            {
                name: 'stateId',
                type: 'number',
                defaultValue: 'null',
                description: 'Id of the state to restrict the results.'
            },
            {
                name: 'averageRevenue',
                type: '<a href="#range">sizeup.api.range</a>',
                defaultValue: 'null',
                description: 'Range filter for average revenue. '
            },
            {
                name: 'totalRevenue',
                type: '<a href="#range">sizeup.api.range</a>',
                defaultValue: 'null',
                description: 'Range filter for total revenue.'
            },
            {
                name: 'totalEmployees',
                type: '<a href="#range">sizeup.api.range</a>',
                defaultValue: 'null',
                description: 'Range filter for total employees.'
            },
            {
                name: 'revenuePerCapita',
                type: '<a href="#range">sizeup.api.range</a>',
                defaultValue: 'null',
                description: 'Range filter for revenue per capita.'
            },
            {
                name: 'householdIncome',
                type: '<a href="#range">sizeup.api.range</a>',
                defaultValue: 'null',
                description: 'Range filter for household income.'
            },
            {
                name: 'householdExpenditures',
                type: '<a href="#range">sizeup.api.range</a>',
                defaultValue: 'null',
                description: 'Range filter for household expenditures.'
            },
            {
                name: 'medianAge',
                type: '<a href="#range">sizeup.api.range</a>',
                defaultValue: 'null',
                description: 'Range filter for median age.'
            },








f.BachelorOrHigher = QueryString.IntValue("bachelorsDegreeOrHigher");
f.HighSchoolOrHigher = QueryString.IntValue("highSchoolOrHigher");
f.WhiteCollarWorkers = QueryString.IntValue("whiteCollarWorkers");
f.BlueCollarWorkers = QueryString.IntValue("blueCollarWorkers");
f.AirportsNearby = QueryString.IntValue("airportsNearby");
f.YoungEducated = QueryString.IntValue("youngEducated");
f.UniversitiesNearby = QueryString.IntValue("universitiesNearby");
f.CommuteTime = QueryString.IntValue("commuteTime");
f.Attribute = QueryString.StringValue("attribute");





        ],
        exampleParams: { industryId: 8589, granularity: sizeup.api.granularity.COUNTY, itemCount: 3, averageRevenue: new sizeup.api.range(100000, 10000000) }
    }*/

                    ]
                }
        ];


        return s;
    };
</script>
